%Wrapper function auto-generated by LNA++
%Usage:
%	[MRE,Var,dMREdTheta,dVardTheta,dMRE2dTheta2,dVar2dTheta2] = BirthDeath_LNA(Theta, tspan, [obsVar], [merr], [Y0], [V0]
%	Theta: vector of model parameters
%	tspan: vector of output times
% Optional arguments:
%	obsVar: vector of indices (beginning with 1) corresponding to the species to output
%	merr: either a single number, or a vector the length of obsVar corresponding to the measurement error of each species
%	Y0: initial values for each species
%	V0: initial values for each entry of the (upper triangular portion of the) covariance matrix
%	in the default Matlab (i.e. column major) ordering
%Output:
%	MRE: solution of the macroscopic rate equation for the observed variables specified
%	Var: block cross-covariance matrix for the observed variables specified
%	dMREdTheta: sensitivity tensor of the MRE for each observed variable with respect to each parameter, at each time point
%	dVardTheta: sensitivity tensor of the block cross-covariance for each entry of the covariance matric w.r.t. all parameters
%	d2MREdTheta2: second order sensitivity tensor of the MRE solution
%	d2VardTheta2: second order sensitivity tensor of the block cross-covariance solution
%The algorithm uses the number of output arguments to decide whether or not to compute sensitivities, so it is less computationally
%intensive if fewer output arguments are specified
function varargout = BirthDeath_LNA(par, tspan, varargin)
if nargout > 4
    [Y Sigma Sens_MRE Sens_Var Sens2_MRE Sens2_Var] =  BirthDeath_LNA_mex(par, tspan, varargin);                   
    Y       = squeeze(Y);                                                                                  
    Sigma   = squeeze(Sigma);                                                                              
    Sens_MRE  = squeeze(Sens_MRE);                                                                         
    Sens_Var  = squeeze(Sens_Var);                                                                         
    Sens2_MRE = squeeze(Sens2_MRE);                                                                        
    Sens2_Var = squeeze(Sens2_Var);                                                                        
    varargout = {Y, Sigma, Sens_MRE, Sens_Var, Sens2_MRE, Sens2_Var};                                      
elseif nargout > 2                                                                                         
    [Y Sigma Sens_MRE Sens_Var] =  BirthDeath_LNA_mex(par, tspan, varargin);                                       
    Y       = squeeze(Y);                                                                                  
    Sigma   = squeeze(Sigma);                                                                              
    Sens_MRE  = squeeze(Sens_MRE);                                                                         
    Sens_Var  = squeeze(Sens_Var);                                                                         
    varargout = {Y, Sigma, Sens_MRE, Sens_Var};                                                            
else                                                                                                       
    [Y Sigma] =  BirthDeath_LNA_mex(par, tspan, varargin);                                                         
    Y       = squeeze(Y);                                                                                  
    Sigma   = squeeze(Sigma);                                                                              
    varargout = {Y, Sigma};                                                                                
end                                                                                                        
                                                                                                           
